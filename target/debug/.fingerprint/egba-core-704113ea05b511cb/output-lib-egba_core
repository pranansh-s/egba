{"$message_type":"diagnostic","message":"unused variable: `rn`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3477,"byte_end":3479,"line_start":68,"line_end":68,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let rn = bit_r!(inst, 16..20);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3477,"byte_end":3479,"line_start":68,"line_end":68,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let rn = bit_r!(inst, 16..20);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_rn","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `rn`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:68:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let rn = bit_r!(inst, 16..20);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_rn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `rd`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3517,"byte_end":3519,"line_start":69,"line_end":69,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let rd = bit_r!(inst, 12..16);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3517,"byte_end":3519,"line_start":69,"line_end":69,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let rd = bit_r!(inst, 12..16);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_rd","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `rd`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:69:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let rd = bit_r!(inst, 12..16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_rd`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `s`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3557,"byte_end":3558,"line_start":70,"line_end":70,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        let s = inst.bit(20);","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3557,"byte_end":3558,"line_start":70,"line_end":70,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        let s = inst.bit(20);","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_s","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `s`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:70:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let s = inst.bit(20);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_s`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `carry` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3594,"byte_end":3599,"line_start":72,"line_end":72,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"        let mut carry = self.cpsr.c_condition_bit;","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_carry` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `carry` is assigned to, but never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:72:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut carry = self.cpsr.c_condition_bit;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_carry` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `op2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3642,"byte_end":3645,"line_start":73,"line_end":73,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let op2 = if inst.bit(25) {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3642,"byte_end":3645,"line_start":73,"line_end":73,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let op2 = if inst.bit(25) {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_op2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `op2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:73:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let op2 = if inst.bit(25) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_op2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `carry` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3883,"byte_end":3888,"line_start":79,"line_end":79,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"                carry = op.bit(31);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `carry` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:79:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                carry = op.bit(31);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `rm`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3980,"byte_end":3982,"line_start":85,"line_end":85,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let rm = bit_r!(inst, 0..4);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3980,"byte_end":3982,"line_start":85,"line_end":85,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let rm = bit_r!(inst, 0..4);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"_rm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `rm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:85:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let rm = bit_r!(inst, 0..4);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_rm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `shift_type`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":4022,"byte_end":4032,"line_start":86,"line_end":86,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"            let shift_type = bit_r!(inst, 5..7);","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":4022,"byte_end":4032,"line_start":86,"line_end":86,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"            let shift_type = bit_r!(inst, 5..7);","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":"_shift_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `shift_type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:86:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let shift_type = bit_r!(inst, 5..7);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_shift_type`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `rotate`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":4108,"byte_end":4114,"line_start":88,"line_end":88,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let rotate = if imm {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":4108,"byte_end":4114,"line_start":88,"line_end":88,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let rotate = if imm {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"_rotate","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `rotate`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:88:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let rotate = if imm {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_rotate`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5201,"byte_end":5204,"line_start":121,"line_end":121,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_AND(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5201,"byte_end":5204,"line_start":121,"line_end":121,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_AND(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:121:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_AND(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5261,"byte_end":5264,"line_start":125,"line_end":125,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_EOR(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5261,"byte_end":5264,"line_start":125,"line_end":125,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_EOR(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:125:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_EOR(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5329,"byte_end":5332,"line_start":129,"line_end":129,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_SUB(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5329,"byte_end":5332,"line_start":129,"line_end":129,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_SUB(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:129:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_SUB(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5397,"byte_end":5400,"line_start":133,"line_end":133,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_RSB(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5397,"byte_end":5400,"line_start":133,"line_end":133,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_RSB(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:133:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_RSB(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5465,"byte_end":5468,"line_start":137,"line_end":137,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_ADD(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5465,"byte_end":5468,"line_start":137,"line_end":137,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_ADD(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:137:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_ADD(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5533,"byte_end":5536,"line_start":141,"line_end":141,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_ADC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5533,"byte_end":5536,"line_start":141,"line_end":141,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_ADC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:141:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_ADC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5601,"byte_end":5604,"line_start":145,"line_end":145,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_SBC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5601,"byte_end":5604,"line_start":145,"line_end":145,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_SBC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:145:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_SBC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5669,"byte_end":5672,"line_start":149,"line_end":149,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_RSC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5669,"byte_end":5672,"line_start":149,"line_end":149,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_RSC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:149:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_RSC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5737,"byte_end":5740,"line_start":153,"line_end":153,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_TST(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5737,"byte_end":5740,"line_start":153,"line_end":153,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_TST(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:153:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_TST(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5805,"byte_end":5808,"line_start":157,"line_end":157,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_TEQ(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5805,"byte_end":5808,"line_start":157,"line_end":157,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_TEQ(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:157:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_TEQ(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5873,"byte_end":5876,"line_start":161,"line_end":161,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_CMP(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5873,"byte_end":5876,"line_start":161,"line_end":161,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_CMP(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:161:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_CMP(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5941,"byte_end":5944,"line_start":165,"line_end":165,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_CMN(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5941,"byte_end":5944,"line_start":165,"line_end":165,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_CMN(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:165:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_CMN(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6009,"byte_end":6012,"line_start":169,"line_end":169,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_ORR(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6009,"byte_end":6012,"line_start":169,"line_end":169,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_ORR(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:169:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_ORR(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6077,"byte_end":6080,"line_start":173,"line_end":173,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_MOV(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6077,"byte_end":6080,"line_start":173,"line_end":173,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_MOV(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:173:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_MOV(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6145,"byte_end":6148,"line_start":177,"line_end":177,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_BIC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6145,"byte_end":6148,"line_start":177,"line_end":177,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_BIC(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:177:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_BIC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `bus`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6213,"byte_end":6216,"line_start":181,"line_end":181,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_MVN(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6213,"byte_end":6216,"line_start":181,"line_end":181,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    fn arm_MVN(&mut self, bus: &mut impl Bus) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_bus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:181:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_MVN(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `addr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/bus.rs","byte_start":108,"byte_end":112,"line_start":6,"line_end":6,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"    fn write_byte(&mut self, addr: u32, value: u8) {}","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/bus.rs","byte_start":108,"byte_end":112,"line_start":6,"line_end":6,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"    fn write_byte(&mut self, addr: u32, value: u8) {}","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":"_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `addr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/bus.rs:6:30\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn write_byte(&mut self, addr: u32, value: u8) {}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_addr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `value`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/bus.rs","byte_start":119,"byte_end":124,"line_start":6,"line_end":6,"column_start":41,"column_end":46,"is_primary":true,"text":[{"text":"    fn write_byte(&mut self, addr: u32, value: u8) {}","highlight_start":41,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"egba-core/src/bus.rs","byte_start":119,"byte_end":124,"line_start":6,"line_end":6,"column_start":41,"column_end":46,"is_primary":true,"text":[{"text":"    fn write_byte(&mut self, addr: u32, value: u8) {}","highlight_start":41,"highlight_end":46}],"label":null,"suggested_replacement":"_value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `value`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/bus.rs:6:41\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn write_byte(&mut self, addr: u32, value: u8) {}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_value`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `rom` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cartridge/mod.rs","byte_start":64,"byte_end":73,"line_start":5,"line_end":5,"column_start":12,"column_end":21,"is_primary":false,"text":[{"text":"pub struct Cartridge {","highlight_start":12,"highlight_end":21}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"egba-core/src/cartridge/mod.rs","byte_start":80,"byte_end":83,"line_start":6,"line_end":6,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    rom: Rom,","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `rom` is never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cartridge/mod.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Cartridge {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rom: Rom,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `skip_bios` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/bios.rs","byte_start":59,"byte_end":63,"line_start":3,"line_end":3,"column_start":12,"column_end":16,"is_primary":false,"text":[{"text":"pub struct Bios {","highlight_start":12,"highlight_end":16}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"egba-core/src/bios.rs","byte_start":84,"byte_end":93,"line_start":5,"line_end":5,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    skip_bios: bool,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `skip_bios` is never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/bios.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Bios {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rom: Rom,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    skip_bios: bool,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `cartridge` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/memory.rs","byte_start":69,"byte_end":75,"line_start":3,"line_end":3,"column_start":12,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Memory {","highlight_start":12,"highlight_end":18}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"egba-core/src/memory.rs","byte_start":216,"byte_end":225,"line_start":8,"line_end":8,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"    pub(crate) cartridge: Cartridge,","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `cartridge` is never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/memory.rs:8:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Memory {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) cartridge: Cartridge,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_BX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":2617,"byte_end":2623,"line_start":44,"line_end":44,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"    fn arm_BX(&mut self, bus: &mut impl Bus, rn: usize) {","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":2617,"byte_end":2623,"line_start":44,"line_end":44,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"    fn arm_BX(&mut self, bus: &mut impl Bus, rn: usize) {","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"arm_bx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_BX` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:44:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_BX(&mut self, bus: &mut impl Bus, rn: usize) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_bx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":2920,"byte_end":2925,"line_start":54,"line_end":54,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"    fn arm_B(&mut self, bus: &mut impl Bus, offset: usize) {","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":2920,"byte_end":2925,"line_start":54,"line_end":54,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"    fn arm_B(&mut self, bus: &mut impl Bus, offset: usize) {","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":"arm_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_B` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:54:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_B(&mut self, bus: &mut impl Bus, offset: usize) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_b`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_BL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3143,"byte_end":3149,"line_start":60,"line_end":60,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"    fn arm_BL(&mut self, bus: &mut impl Bus, offset: usize) {","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":3143,"byte_end":3149,"line_start":60,"line_end":60,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"    fn arm_BL(&mut self, bus: &mut impl Bus, offset: usize) {","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"arm_bl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_BL` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:60:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_BL(&mut self, bus: &mut impl Bus, offset: usize) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_bl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_AND` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5182,"byte_end":5189,"line_start":121,"line_end":121,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_AND(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5182,"byte_end":5189,"line_start":121,"line_end":121,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_AND(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_and","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_AND` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:121:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_AND(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_and`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_EOR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5242,"byte_end":5249,"line_start":125,"line_end":125,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_EOR(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5242,"byte_end":5249,"line_start":125,"line_end":125,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_EOR(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_eor","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_EOR` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:125:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_EOR(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_eor`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_SUB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5310,"byte_end":5317,"line_start":129,"line_end":129,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_SUB(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5310,"byte_end":5317,"line_start":129,"line_end":129,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_SUB(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_sub","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_SUB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:129:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_SUB(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_sub`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_RSB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5378,"byte_end":5385,"line_start":133,"line_end":133,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_RSB(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5378,"byte_end":5385,"line_start":133,"line_end":133,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_RSB(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_rsb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_RSB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:133:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_RSB(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_rsb`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_ADD` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5446,"byte_end":5453,"line_start":137,"line_end":137,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_ADD(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5446,"byte_end":5453,"line_start":137,"line_end":137,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_ADD(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_add","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_ADD` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:137:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_ADD(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_add`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_ADC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5514,"byte_end":5521,"line_start":141,"line_end":141,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_ADC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5514,"byte_end":5521,"line_start":141,"line_end":141,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_ADC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_adc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_ADC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:141:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_ADC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_adc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_SBC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5582,"byte_end":5589,"line_start":145,"line_end":145,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_SBC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5582,"byte_end":5589,"line_start":145,"line_end":145,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_SBC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_sbc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_SBC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:145:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_SBC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_sbc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_RSC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5650,"byte_end":5657,"line_start":149,"line_end":149,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_RSC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5650,"byte_end":5657,"line_start":149,"line_end":149,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_RSC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_rsc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_RSC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:149:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_RSC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_rsc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_TST` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5718,"byte_end":5725,"line_start":153,"line_end":153,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_TST(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5718,"byte_end":5725,"line_start":153,"line_end":153,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_TST(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_tst","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_TST` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:153:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_TST(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_tst`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_TEQ` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5786,"byte_end":5793,"line_start":157,"line_end":157,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_TEQ(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5786,"byte_end":5793,"line_start":157,"line_end":157,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_TEQ(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_teq","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_TEQ` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:157:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_TEQ(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_teq`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_CMP` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5854,"byte_end":5861,"line_start":161,"line_end":161,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_CMP(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5854,"byte_end":5861,"line_start":161,"line_end":161,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_CMP(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_cmp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_CMP` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:161:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_CMP(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_cmp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_CMN` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5922,"byte_end":5929,"line_start":165,"line_end":165,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_CMN(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5922,"byte_end":5929,"line_start":165,"line_end":165,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_CMN(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_cmn","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_CMN` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:165:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_CMN(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_cmn`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_ORR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5990,"byte_end":5997,"line_start":169,"line_end":169,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_ORR(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":5990,"byte_end":5997,"line_start":169,"line_end":169,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_ORR(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_orr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_ORR` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:169:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_ORR(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_orr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_MOV` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6058,"byte_end":6065,"line_start":173,"line_end":173,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MOV(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6058,"byte_end":6065,"line_start":173,"line_end":173,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MOV(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_mov","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_MOV` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:173:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_MOV(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_mov`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_BIC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6126,"byte_end":6133,"line_start":177,"line_end":177,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_BIC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6126,"byte_end":6133,"line_start":177,"line_end":177,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_BIC(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_bic","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_BIC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:177:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_BIC(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_bic`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_MVN` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6194,"byte_end":6201,"line_start":181,"line_end":181,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MVN(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6194,"byte_end":6201,"line_start":181,"line_end":181,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MVN(&mut self, bus: &mut impl Bus) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_mvn","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_MVN` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:181:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_MVN(&mut self, bus: &mut impl Bus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_mvn`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_MUL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6262,"byte_end":6269,"line_start":185,"line_end":185,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MUL(&mut self, s: bool, rd: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6262,"byte_end":6269,"line_start":185,"line_end":185,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MUL(&mut self, s: bool, rd: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_mul","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_MUL` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:185:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_MUL(&mut self, s: bool, rd: usize, rs: usize, rm: usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_mul`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_MLA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6569,"byte_end":6576,"line_start":195,"line_end":195,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MLA(&mut self, s: bool, rd: usize, rn: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6569,"byte_end":6576,"line_start":195,"line_end":195,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn arm_MLA(&mut self, s: bool, rd: usize, rn: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"arm_mla","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_MLA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:195:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_MLA(&mut self, s: bool, rd: usize, rn: usize, rs: usize, rm: usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_mla`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_UMULL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6922,"byte_end":6931,"line_start":205,"line_end":205,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_UMULL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":6922,"byte_end":6931,"line_start":205,"line_end":205,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_UMULL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"arm_umull","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_UMULL` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:205:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_UMULL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_umull`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_UMLAL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":7322,"byte_end":7331,"line_start":216,"line_end":216,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_UMLAL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":7322,"byte_end":7331,"line_start":216,"line_end":216,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_UMLAL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"arm_umlal","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_UMLAL` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:216:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_UMLAL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_umlal`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_SMULL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":7818,"byte_end":7827,"line_start":228,"line_end":228,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_SMULL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":7818,"byte_end":7827,"line_start":228,"line_end":228,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_SMULL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"arm_smull","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_SMULL` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:228:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_SMULL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_smull`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `arm_SMLAL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":8239,"byte_end":8248,"line_start":239,"line_end":239,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_SMLAL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/cpu/modes/arm.rs","byte_start":8239,"byte_end":8248,"line_start":239,"line_end":239,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn arm_SMLAL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"arm_smlal","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `arm_SMLAL` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/cpu/modes/arm.rs:239:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arm_SMLAL(&mut self, s: bool, rd_hi: usize, rd_lo: usize, rs: usize, rm: usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `arm_smlal`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `VBlank` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":137,"byte_end":143,"line_start":8,"line_end":8,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    VBlank: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":137,"byte_end":143,"line_start":8,"line_end":8,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    VBlank: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"vblank","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `VBlank` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VBlank: bool,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `vblank`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `HBlank` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":155,"byte_end":161,"line_start":9,"line_end":9,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    HBlank: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":155,"byte_end":161,"line_start":9,"line_end":9,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    HBlank: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"hblank","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `HBlank` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    HBlank: bool,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `hblank`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `VCounter` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":173,"byte_end":181,"line_start":10,"line_end":10,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    VCounter: bool,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":173,"byte_end":181,"line_start":10,"line_end":10,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    VCounter: bool,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"vcounter","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `VCounter` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VCounter: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `vcounter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Timer0` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":193,"byte_end":199,"line_start":11,"line_end":11,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer0: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":193,"byte_end":199,"line_start":11,"line_end":11,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer0: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"timer0","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Timer0` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Timer0: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `timer0`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Timer1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":211,"byte_end":217,"line_start":12,"line_end":12,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer1: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":211,"byte_end":217,"line_start":12,"line_end":12,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer1: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"timer1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Timer1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Timer1: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `timer1`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Timer2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":229,"byte_end":235,"line_start":13,"line_end":13,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer2: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":229,"byte_end":235,"line_start":13,"line_end":13,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer2: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"timer2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Timer2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Timer2: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `timer2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Timer3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":247,"byte_end":253,"line_start":14,"line_end":14,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer3: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":247,"byte_end":253,"line_start":14,"line_end":14,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Timer3: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"timer3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Timer3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Timer3: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `timer3`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Serial` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":265,"byte_end":271,"line_start":15,"line_end":15,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Serial: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":265,"byte_end":271,"line_start":15,"line_end":15,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Serial: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"serial","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Serial` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Serial: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `serial`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `DMA0` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":283,"byte_end":287,"line_start":16,"line_end":16,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA0: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":283,"byte_end":287,"line_start":16,"line_end":16,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA0: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"dma0","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `DMA0` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DMA0: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dma0`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `DMA1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":299,"byte_end":303,"line_start":17,"line_end":17,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA1: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":299,"byte_end":303,"line_start":17,"line_end":17,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA1: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"dma1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `DMA1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DMA1: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dma1`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `DMA2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":315,"byte_end":319,"line_start":18,"line_end":18,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA2: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":315,"byte_end":319,"line_start":18,"line_end":18,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA2: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"dma2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `DMA2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DMA2: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dma2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `DMA3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":331,"byte_end":335,"line_start":19,"line_end":19,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA3: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":331,"byte_end":335,"line_start":19,"line_end":19,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    DMA3: bool,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"dma3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `DMA3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DMA3: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dma3`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Keypad` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":347,"byte_end":353,"line_start":20,"line_end":20,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Keypad: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":347,"byte_end":353,"line_start":20,"line_end":20,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Keypad: bool,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"keypad","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Keypad` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Keypad: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `keypad`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `Cartridge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":365,"byte_end":374,"line_start":21,"line_end":21,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    Cartridge: bool,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"egba-core/src/interrupt.rs","byte_start":365,"byte_end":374,"line_start":21,"line_end":21,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    Cartridge: bool,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"cartridge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Cartridge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0megba-core/src/interrupt.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cartridge: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cartridge`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"69 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 69 warnings emitted\u001b[0m\n\n"}
